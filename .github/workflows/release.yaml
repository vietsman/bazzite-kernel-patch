name: Build Patched Kernel

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build_kernel:
    runs-on: ubuntu-latest
    container:
      image: fedora:42

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kernel build dependencies
        run: |
          dnf install -y rpmdevtools rpm-build dnf-plugins-core
          dnf install -y \
              bc bindgen bison clang clang-tools-extra dwarves elfutils-devel \
              flex gcc gcc-c++ git glibc-static hmaccalc hostname kernel-rpm-macros \
              lvm2 m4 make net-tools nss-tools openssl openssl-devel perl-Carp \
              perl-devel perl-generators perl-interpreter pesign \
              python3-devel python3-pyyaml rust rust-src rustfmt \
              systemd-boot-unsigned systemd-ukify tpm2-tools which dracut

          # Install clippy via rustup
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup component add clippy
           
      - name: Download kernel SRPM
        run: |
          dnf download --source kernel
          ls -lah *.src.rpm

      - name: Set up RPM build tree
        run: |
          rpmdev-setuptree
          rpm -ivh *.src.rpm

      - name: Apply patch
        run: |
          cp cyan_skillfish.patch ~/rpmbuild/SOURCES/
          cd ~/rpmbuild/SPECS

      - name: Build kernel RPM
        run: |
          cd ~/rpmbuild/SPECS
          rpmbuild -bb --with baseonly kernel.spec

      - name: Upload built RPMs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: patched-kernel-rpm
          path: ~/rpmbuild/RPMS/x86_64/*.rpm

      - name: Publish RPMs to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ~/rpmbuild/RPMS/x86_64/*.rpm
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}





